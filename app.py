import streamlit as st
import pandas as pd
import io
from text_to_teamwork import TextToTeamworkConverter

# Configuration de la page
st.set_page_config(
    page_title="Text to Teamwork Converter",
    page_icon="üìã",
    layout="wide"
)

# CSS personnalis√© pour une interface moderne
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        padding: 2rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        color: white;
    }
    .feature-box {
        background: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        border-left: 4px solid #667eea;
        margin: 1rem 0;
    }
    .success-box {
        background: #d4edda;
        padding: 1rem;
        border-radius: 5px;
        border-left: 4px solid #28a745;
        color: #155724;
    }
    .warning-box {
        background: #fff3cd;
        padding: 1rem;
        border-radius: 5px;
        border-left: 4px solid #ffc107;
        color: #856404;
    }
</style>
""", unsafe_allow_html=True)

# En-t√™te principal
st.markdown("""
<div class="main-header">
    <h1>üìã Text to Teamwork Converter</h1>
    <p>Transformez vos textes de t√¢ches structur√©es en fichiers Excel compatibles avec Teamwork Projects</p>
</div>
""", unsafe_allow_html=True)

# Initialiser le convertisseur avec configuration IA
@st.cache_resource
def get_converter(api_key=None, use_ai=True):
    return TextToTeamworkConverter(openai_api_key=api_key, use_ai=use_ai)

# Sidebar avec configuration et instructions
with st.sidebar:
    st.header("ü§ñ Configuration IA")
    
    # Configuration OpenAI
    api_key = st.text_input(
        "Cl√© OpenAI API (optionnel)",
        type="password",
        help="Pour un parsing ultra-pr√©cis avec GPT-4. Laissez vide pour le parser classique.",
        placeholder="sk-..."
    )
    
    use_ai = st.checkbox(
        "Utiliser l'IA (GPT-4)",
        value=True,
        help="Parser intelligent vs parser classique"
    )
    
    if api_key:
        st.success("üß† Mode IA activ√©")
        st.info("Pr√©cision maximale avec GPT-4")
    else:
        st.warning("üîß Mode classique")
        st.info("Parser bas√© sur des r√®gles")
    
    st.markdown("---")
    st.header("üìù Instructions")
    st.markdown("""
    **Format attendu :**
    - Titre du projet en d√©but
    - T√¢ches num√©rot√©es (1., 2., etc.)
    - Sous-√©l√©ments avec descriptions
    - Priorit√©s, d√©pendances, crit√®res
    
    **Exemple :**
    ```
    Mon Projet
    
    1. Premi√®re t√¢che
       Description : D√©tails de la t√¢che
       Priorit√© : High
    
    2. Deuxi√®me t√¢che
       D√©pendance : 1
       Crit√®re : Validation requise
    ```
    """)
    
    st.header("üéØ Colonnes Excel")
    st.markdown("""
    - **TASKLIST** : Nom du projet
    - **TASK** : Nom de la t√¢che (sans num√©rotation)
    - **DESCRIPTION** : D√©tails, crit√®res, d√©pendances
    - **PRIORITY** : Priorit√© si mentionn√©e
    - **Autres** : Laiss√©es vides pour saisie manuelle
    """)

# Initialiser le convertisseur avec la configuration (gestion d'erreur pour le cloud)
try:
    converter = get_converter(api_key=api_key if api_key else None, use_ai=use_ai)
except Exception as e:
    st.error(f"Erreur d'initialisation : {e}")
    # Fallback vers mode classique
    converter = get_converter(api_key=None, use_ai=False)
    st.warning("üîß Mode classique activ√© suite √† une erreur")

# Interface principale
col1, col2 = st.columns([1, 1])

with col1:
    st.header("üìù Texte d'entr√©e")
    
    # Zone de texte pour l'input
    input_text = st.text_area(
        "Collez votre texte structur√© ici :",
        value=st.session_state.get('example_text', ''),
        height=400,
        placeholder="""Exemple :

Campagne R√©seaux Sociaux

1. D√©finir le concept
   Description : Cr√©er le th√®me visuel
   Priorit√© : High
   Crit√®re : Validation √©quipe

2. Cr√©er calendrier √©ditorial
   Description : Planning 4 semaines
   D√©pendance : 1""",
        help="Collez votre texte avec t√¢ches hi√©rarchis√©es"
    )
    
    # Exemple pr√©d√©fini
    if st.button("üìÑ Charger l'exemple", type="secondary"):
        st.session_state.example_text = """Campagne R√©seaux Sociaux ‚Äì Liste de T√¢ches

üìå Objectif g√©n√©ral :
Planifier et lancer une campagne de visibilit√© sur Instagram et LinkedIn.

Jalon Principal : Lancement du premier post sponsoris√©

‚úÖ Liste des T√¢ches :
1. D√©finir le concept de la campagne  
   Description : Trouver un message central et un th√®me visuel  
   Priorit√© : High
   Crit√®re d'acceptation : Concept valid√© par l'√©quipe

2. Cr√©er le calendrier √©ditorial  
   Description : Planifier les publications sur 4 semaines  
   D√©pendance : 1  
   Priorit√© : Medium
   Crit√®re d'acceptation : Calendrier complet avec visuels et dates

3. R√©diger les textes des publications  
   Description : √âcrire les textes adapt√©s √† chaque plateforme  
   D√©pendance : 2  
   Priorit√© : High
   Crit√®re d'acceptation : Textes sans fautes et optimis√©s SEO"""
        st.rerun()

with col2:
    st.header("üìä Pr√©visualisation")
    
    if input_text:
        try:
            # Pr√©visualisation avec indication du mode
            if api_key and use_ai:
                st.info("üß† **Parsing avec IA** - Pr√©cision maximale activ√©e")
            else:
                st.info("üîß **Parsing classique** - Ajoutez une cl√© OpenAI pour une pr√©cision optimale")
            
            preview_df = converter.preview_conversion(input_text)
            
            if not preview_df.empty:
                st.markdown('<div class="success-box">‚úÖ Conversion r√©ussie ! Pr√©visualisation ci-dessous :</div>', unsafe_allow_html=True)
                
                # Afficher le tableau avec un style am√©lior√©
                st.dataframe(
                    preview_df,
                    use_container_width=True,
                    hide_index=True
                )
                
                # Statistiques rapides
                st.markdown("**üìä Statistiques :**")
                col_stat1, col_stat2, col_stat3 = st.columns(3)
                
                with col_stat1:
                    st.metric("T√¢ches", len(preview_df))
                
                with col_stat2:
                    priority_count = len(preview_df[preview_df['PRIORITY'] != ''])
                    st.metric("Avec priorit√©", priority_count)
                
                with col_stat3:
                    project_name = preview_df.iloc[0]['TASKLIST'] if not preview_df.empty else "N/A"
                    st.metric("Projet", project_name[:15] + "..." if len(project_name) > 15 else project_name)
                
            else:
                st.markdown('<div class="warning-box">‚ö†Ô∏è Aucune t√¢che d√©tect√©e. V√©rifiez le format de votre texte.</div>', unsafe_allow_html=True)
                
        except Exception as e:
            st.error(f"Erreur lors de la pr√©visualisation : {str(e)}")
    else:
        st.info("üëÜ Entrez votre texte √† gauche pour voir la pr√©visualisation")

# Section de t√©l√©chargement
if input_text:
    st.header("üíæ T√©l√©chargement")
    
    col_dl1, col_dl2, col_dl3 = st.columns([1, 1, 1])
    
    with col_dl2:
        if st.button("üì• G√©n√©rer et t√©l√©charger Excel", type="primary", use_container_width=True):
            try:
                # Cr√©er le fichier Excel en m√©moire
                output = io.BytesIO()
                
                # Convertir en DataFrame
                tasks_df = converter.preview_conversion(input_text)
                
                if not tasks_df.empty:
                    # Sauvegarder en Excel dans le buffer
                    with pd.ExcelWriter(output, engine='openpyxl') as writer:
                        tasks_df.to_excel(writer, index=False, sheet_name='Teamwork Import')
                        
                        # Ajuster les colonnes
                        worksheet = writer.sheets['Teamwork Import']
                        for idx, col in enumerate(tasks_df.columns):
                            max_length = max(
                                tasks_df[col].astype(str).map(len).max(),
                                len(col)
                            )
                            worksheet.column_dimensions[chr(65 + idx)].width = min(max_length + 2, 50)
                    
                    # Pr√©parer le t√©l√©chargement
                    output.seek(0)
                    
                    # Nom du projet pour le fichier
                    project_name = tasks_df.iloc[0]['TASKLIST'] if not tasks_df.empty else "Projet"
                    filename = f"{project_name.replace(' ', '_')}_Teamwork.xlsx"
                    
                    st.download_button(
                        label="üì• T√©l√©charger le fichier Excel",
                        data=output.getvalue(),
                        file_name=filename,
                        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        use_container_width=True
                    )
                    
                    st.success("‚úÖ Fichier Excel g√©n√©r√© avec succ√®s !")
                    
                else:
                    st.error("‚ùå Impossible de g√©n√©rer le fichier : aucune t√¢che d√©tect√©e")
                    
            except Exception as e:
                st.error(f"‚ùå Erreur lors de la g√©n√©ration : {str(e)}")

# Section d'aide avanc√©e
with st.expander("üîß Aide avanc√©e et nouveaut√©s IA"):
    st.markdown("""
    ### üß† **NOUVEAU : Parser IA avec GPT-4**
    
    **üöÄ Avantages du mode IA :**
    - **100% fiable** : Comprend n'importe quel format de texte
    - **Ultra-flexible** : Emails, documents Word, notes d√©sorganis√©es
    - **Intelligence contextuelle** : Comprend l'intention, pas juste la forme
    - **Mapping parfait** : T√¢ches principales vs sous-t√¢ches automatique
    - **Extraction intelligente** : Priorit√©s, d√©pendances, risques
    
    **‚öôÔ∏è Comment activer :**
    1. Obtenir une cl√© OpenAI sur [platform.openai.com](https://platform.openai.com)
    2. L'entrer dans la sidebar 
    3. Cocher "Utiliser l'IA"
    4. **R√©sultat : 100% fiable peu importe le format !**
    
    ---
    
    ### üìã Format support√© (les deux modes)
    
    **Mode IA (Recommand√©) :**
    - ‚úÖ **Tout format** : emails, notes, documents d√©sorganis√©s
    - ‚úÖ **Num√©rotation flexible** : 1., 2.5.1, ‚Ä¢, -, emojis, ou aucune
    - ‚úÖ **Langue naturelle** : "urgent", "important", "doit √™tre fait avant"
    - ‚úÖ **Structure libre** : peu importe l'organisation
    
    **Mode classique (Fallback) :**
    - **Num√©rotation** : `1.`, `2.5.1`, `a)`, `‚Ä¢`, `-`, `‚úÖ`
    - **Priorit√©s** : √©lev√©e, haute, moyenne, faible (fran√ßais/anglais)
    - **Sections** : Description:, D√©pendance:, Crit√®re:, etc.
    
    ### üéØ Conseils selon le mode
    
    **üß† Avec IA activ√©e :**
    - Collez n'importe quel texte de projet
    - L'IA comprend le contexte et l'intention
    - Formats libres accept√©s
    
    **üîß Mode classique :**
    - Structurez clairement avec num√©rotation
    - Utilisez les mots-cl√©s : "Description :", "Priorit√© :"
    - Hi√©rarchie : 2.5 (principale) ‚Üí 2.5.1 (sous-t√¢che)
    
    ### üîÑ Workflow optimis√©
    
    1. **[NOUVEAU]** Ajoutez votre cl√© OpenAI pour 100% de fiabilit√©
    2. Collez votre texte (n'importe quel format)
    3. L'IA analyse et mappe automatiquement
    4. V√©rifiez la pr√©visualisation
    5. T√©l√©chargez et importez dans Teamwork
    
    ### üí° Exemples de formats support√©s en mode IA
    
    **Email de projet :**
    ```
    Objet: Nouveau site web
    
    Salut, voici les t√¢ches pour le site :
    - Design des maquettes (urgent)
    - D√©veloppement front-end 
    - Tests utilisateurs
    ```
    
    **Notes de r√©union :**
    ```
    R√©union projet mobile app
    
    TODO:
    * Interface utilisateur ‚Üí Marie (priorit√© haute)
    * Backend API ‚Üí Jean 
    * Tests ‚Üí √©quipe QA (apr√®s backend)
    ```
    
    **‚ú® L'IA comprend tout et mappe parfaitement !**
    """)

# Footer
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; padding: 2rem;">
    <p>üöÄ <strong>Text to Teamwork Converter</strong> - Simplifiez votre gestion de projet</p>
    <p>Compatible avec Teamwork Projects | Format Excel optimis√© | Conversion automatique</p>
</div>
""", unsafe_allow_html=True) 